.dice-container {
  perspective: 1000px;
  perspective-origin: center center;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 150px;
  margin: 20px 0;
}

.dice {
  position: relative;
  width: 80px;
  height: 80px;
  transform-style: preserve-3d;
  transition: transform 0.1s ease;
  cursor: pointer;
}

.dice.rolling {
  animation: diceRoll 2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes diceRoll {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  25% {
    transform: rotateX(180deg) rotateY(90deg) rotateZ(45deg);
  }
  50% {
    transform: rotateX(360deg) rotateY(180deg) rotateZ(90deg);
  }
  75% {
    transform: rotateX(540deg) rotateY(270deg) rotateZ(135deg);
  }
  100% {
    transform: rotateX(720deg) rotateY(360deg) rotateZ(180deg);
  }
}

.face {
  position: absolute;
  width: 80px;
  height: 80px;
  background: linear-gradient(135deg, #ffffff 0%, #f0f0f0 100%);
  border: 3px solid #333;
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 
    inset 0 0 20px rgba(0, 0, 0, 0.1),
    0 5px 15px rgba(0, 0, 0, 0.3);
}

.face.front {
  transform: translateZ(40px);
}

.face.back {
  transform: rotateY(180deg) translateZ(40px);
}

.face.right {
  transform: rotateY(90deg) translateZ(40px);
}

.face.left {
  transform: rotateY(-90deg) translateZ(40px);
}

.face.top {
  transform: rotateX(90deg) translateZ(40px);
}

.face.bottom {
  transform: rotateX(-90deg) translateZ(40px);
}

/* Dice dots styling */
.dots {
  width: 100%;
  height: 100%;
  padding: 8px;
  display: grid;
  gap: 4px;
}

.dots::before,
.dots::after {
  content: '';
  background: #333;
  border-radius: 50%;
  width: 12px;
  height: 12px;
}

/* Individual dot patterns for each number */
.dots-1 {
  grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
  place-items: center;
}

.dots-1::before {
  grid-area: 2 / 2;
}

.dots-2 {
  grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
}

.dots-2::before {
  grid-area: 1 / 1;
}

.dots-2::after {
  grid-area: 3 / 3;
}

.dots-3 {
  grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
}

.dots-3::before {
  grid-area: 1 / 1;
}

.dots-3::after {
  grid-area: 3 / 3;
  box-shadow: 0 0 0 0 #333, -20px -20px 0 0 #333;
}

.dots-4 {
  grid-template: 1fr 1fr / 1fr 1fr;
  gap: 8px;
}

.dots-4::before,
.dots-4::after {
  box-shadow: 20px 0 0 0 #333, 0 20px 0 0 #333, 20px 20px 0 0 #333;
}

.dots-5 {
  grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
}

.dots-5::before {
  grid-area: 1 / 1;
  box-shadow: 40px 0 0 0 #333, 0 40px 0 0 #333, 40px 40px 0 0 #333;
}

.dots-5::after {
  grid-area: 2 / 2;
}

.dots-6 {
  grid-template: 1fr 1fr 1fr / 1fr 1fr;
  gap: 8px;
}

.dots-6::before {
  box-shadow: 
    0 0 0 0 #333,
    0 16px 0 0 #333,
    0 32px 0 0 #333;
}

.dots-6::after {
  box-shadow: 
    0 0 0 0 #333,
    0 16px 0 0 #333,
    0 32px 0 0 #333;
}

/* Dice rotation states for final result */
.dice[data-value="1"] {
  transform: rotateX(0deg) rotateY(0deg);
}

.dice[data-value="2"] {
  transform: rotateX(0deg) rotateY(180deg);
}

.dice[data-value="3"] {
  transform: rotateX(0deg) rotateY(-90deg);
}

.dice[data-value="4"] {
  transform: rotateX(0deg) rotateY(90deg);
}

.dice[data-value="5"] {
  transform: rotateX(-90deg) rotateY(0deg);
}

.dice[data-value="6"] {
  transform: rotateX(90deg) rotateY(0deg);
}

/* Hover effects */
.dice:hover:not(.rolling) {
  transform: scale(1.1) rotateX(10deg) rotateY(10deg);
  transition: transform 0.3s ease;
}

/* Enhanced rolling animation with bounce */
.dice-container.rolling {
  animation: containerBounce 2s ease-in-out;
}

@keyframes containerBounce {
  0%, 100% {
    transform: translateY(0px);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateY(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateY(0px);
  }
}

/* Glow effect during roll */
.dice.rolling .face {
  box-shadow: 
    inset 0 0 20px rgba(0, 0, 0, 0.1),
    0 5px 15px rgba(0, 0, 0, 0.3),
    0 0 30px rgba(255, 255, 255, 0.5);
}

/* Particle effect container */
.dice-container::after {
  content: '';
  position: absolute;
  width: 200px;
  height: 200px;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
  border-radius: 50%;
  opacity: 0;
  animation: none;
  pointer-events: none;
}

.dice-container.rolling::after {
  animation: particleGlow 2s ease-in-out;
}

@keyframes particleGlow {
  0%, 100% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .dice {
    width: 60px;
    height: 60px;
  }
  
  .face {
    width: 60px;
    height: 60px;
  }
  
  .face.front { transform: translateZ(30px); }
  .face.back { transform: rotateY(180deg) translateZ(30px); }
  .face.right { transform: rotateY(90deg) translateZ(30px); }
  .face.left { transform: rotateY(-90deg) translateZ(30px); }
  .face.top { transform: rotateX(90deg) translateZ(30px); }
  .face.bottom { transform: rotateX(-90deg) translateZ(30px); }
  
  .dots::before,
  .dots::after {
    width: 8px;
    height: 8px;
  }
}

/* Additional visual enhancements */
.dice-game-area {
  background: radial-gradient(ellipse at center, rgba(255,255,255,0.1) 0%, transparent 70%);
  border-radius: 20px;
  padding: 20px;
  margin: 20px 0;
}

.roll-button-container {
  position: relative;
  overflow: hidden;
}

.roll-button-container::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
  transform: rotate(45deg);
  transition: all 0.5s;
  opacity: 0;
}

.roll-button-container:hover::before {
  animation: shimmer 1.5s ease-in-out infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
    opacity: 0;
  }
}